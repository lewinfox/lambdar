% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api.R
\name{lambdar-api}
\alias{lambdar-api}
\alias{api}
\title{Lambdar API responses}
\description{
This page sets out what your client application can expect to receive from a lambdar API call.
}
\section{Response format}{

The API returns a JSON object the format of which varies depending on the outcome of the
function.
\subsection{Success}{

If the function returned successfully with no warnings the result will look like this:\preformatted{\{
  "status": "ok",
  "result": "<whatever the result is>"
\}
}
}

\subsection{Success but the function raised warning/s}{

If warnings are raised by the lambda function this will be noted in the response object:\preformatted{\{
  "status": "warning",
  "result" "<whatever the result is>",
  "warning_messages": "["warning_message_1", "warning_message_2", ...]"
\}
}
}

\subsection{Lambda function failed}{

If the lambda function raised an error the response will look like this:\preformatted{\{
  "status": "error",
  "error_message": "<error message>"
\}
}
}

\subsection{Lambdar runtime failed}{

If the lambdar runtime environment itself experienced an error, the response will look like this:\preformatted{\{
  "status": "runtime_error",
  "error_message": "<error message>"
\}
}
}
}

\section{Handling the response}{

To handle the result, check the value of the \code{"status"} field.
\itemize{
\item \code{"ok"}: Function executed successfully and the value is in the \code{"result"} field ready for use.
\item \code{"warning"}: Function executed but raised warnings. You can use the value in the \code{"result"}
field but you may want to do extra checks.
\item \code{"error"}: The lambda function raised an error and there is no \code{"result"}. Either something is
wrong with your input or the lambda code.
\item \code{"runtime_error"}: There was an error in the lambdar runtime (not your code). This is probably
going to be an issue on the AWS end so you should probably just try the request again.
}
}

